// Code generated by go-bindata.
// sources:
// assets/module_client.tf
// assets/project/project.tf
// assets/project/terraform.tfvars.example
// assets/s3/iam_role.tf
// assets/s3/iam_user.tf
// assets/s3/policy.s3-principal.tpl
// assets/s3/policy.s3-ro.tpl
// assets/s3/policy.s3-rw.tpl
// assets/s3/s3.tf
// assets/s3/template_file.tf
// assets/common/.formterra.manifest
// assets/common/Makefile
// assets/rds/rds.tf
// assets/rds/terraform.tfvars.example
// assets/acls/acls.tf
// DO NOT EDIT!

package tfproject

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsModule_clientTf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8d\xb1\x0a\x83\x40\x10\x44\xfb\xfb\x8a\x61\x31\x5d\xf0\x03\x02\xd6\x69\x42\x48\x65\xbf\xf1\x56\x73\x44\xef\xe4\x3c\x8b\xb0\xec\xbf\x07\x95\x40\x9a\x61\x60\x1e\x6f\x54\xe1\xa5\x0f\x51\x40\x53\xf2\xeb\x28\x64\xe6\xdc\x51\x41\xaa\xf5\x9d\x27\x31\x23\xa8\x03\x96\xb4\xe6\x4e\xd0\xec\xc3\x2d\x75\x3c\x6e\x51\x42\x8a\x66\xe4\x00\x55\x64\x8e\x83\xa0\x7a\xcb\xe7\x8c\x6a\xe2\x79\x0e\x71\xc0\xa5\x41\x7d\x95\xd2\x72\x0e\xfc\x1c\x65\x81\xd9\x4e\xff\x80\xba\xe5\x7c\xfc\x1c\xee\x39\x87\x58\x7a\x50\xa5\xa7\xc5\x08\xff\xd8\x83\xcb\xcb\x8c\x54\x21\xd1\x6f\x1e\x73\x4e\x55\xa2\x37\x73\xdf\x00\x00\x00\xff\xff\xa2\x68\xc7\x9a\xcc\x00\x00\x00")

func assetsModule_clientTfBytes() ([]byte, error) {
	return bindataRead(
		_assetsModule_clientTf,
		"assets/module_client.tf",
	)
}

func assetsModule_clientTf() (*asset, error) {
	bytes, err := assetsModule_clientTfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/module_client.tf", size: 204, mode: os.FileMode(420), modTime: time.Unix(1485292368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsProjectProjectTf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x92\xcd\x8a\xdc\x30\x10\x84\xef\x7a\x8a\x42\x4c\x6e\xbb\xbe\xe4\x16\xf0\x21\x24\xb0\xe4\x90\x1f\x36\x89\x2f\x21\x2c\xda\x71\x7b\x62\x56\xfe\x89\x24\x0f\x0c\xa2\xdf\x3d\xa8\x25\xcf\xd8\xd9\x93\x9b\x76\xa9\xbb\xea\x93\x62\xbc\x87\x33\xe3\x89\x70\x38\x1b\x87\x77\x35\xaa\x07\x0a\xef\xad\x6d\x8c\xf3\xcc\xea\x6c\x5c\x6f\x9e\x2d\x41\xc7\x98\x14\xd5\xf7\x69\x71\x47\x6a\x8c\xfb\x62\x06\x62\xd6\x88\x88\x11\x7d\x07\xfa\x2b\x23\xaa\x1f\x97\x99\xa0\x6d\xef\x83\x06\x33\x14\x10\x2e\x33\xd5\xa5\xa3\x80\x96\x3a\xb3\xd8\x80\x1a\xbf\x14\xb0\x33\x60\x93\x01\x99\xf2\x31\x8b\x1a\x63\x17\xf2\x65\x0e\x8a\x09\xcb\xac\xef\xca\x51\x1a\x5b\x30\x2b\xe0\xb7\x62\x69\x91\xf5\xc4\xac\xd2\xbf\xbe\xc3\x48\xaf\xc7\x41\x8b\xb1\x9b\x8d\x35\xda\x56\x24\xc9\x62\x9a\x7e\xcf\xac\x38\xc6\x75\xd3\xba\x34\xb5\x55\x8c\xab\xf7\x61\x6a\x17\x4b\xc2\xef\xb3\x94\xc9\xb4\x2a\xdd\xb4\x20\x97\xd5\x95\x9a\x02\xbc\xa0\x2c\x06\xca\xff\x07\x0a\x3f\x1f\x3f\x31\xeb\x3d\x9a\x17\xba\xdc\xe1\x30\x98\x79\xee\xc7\x93\x40\xba\xe9\x9b\x72\x45\x3e\x83\x88\xf1\x2a\xac\xae\xd7\x94\x97\xcc\xae\x1f\x43\x07\x7d\x88\x6f\x3c\xeb\x9d\xec\x9b\x09\x7f\x98\xf5\x2d\xe7\x2e\xdd\xb4\x84\x79\x09\x29\xdc\x57\xa9\x64\x55\x6e\x8a\xf9\x5c\xae\xb9\xce\x42\xb9\x4e\x7b\x8a\xcb\xff\xf3\x57\x9b\x33\xac\x15\x67\xd4\x42\x37\x7f\xb7\xcb\x1d\x0d\x53\xa0\xcd\xd3\x7c\x94\x86\x78\x68\x4d\x30\xd0\x81\x9c\x33\xdd\xe4\x86\xa7\xac\x7d\xf2\xc1\x04\xd2\x62\x2d\x77\xaa\x7c\x26\x3f\xde\xed\x1d\x3c\x9b\xe3\x0b\x8d\x6d\xad\xfd\xdb\x84\xfc\x38\x8d\x5d\x7f\xca\x6f\x7a\x83\xfe\x90\x23\x25\xee\x65\xde\x87\x2c\x14\xe2\x89\x79\x92\xad\x98\xb3\x5a\x68\x4a\x1a\xf0\x26\xe1\xbf\x00\x00\x00\xff\xff\x71\x8c\xc9\x2b\x71\x03\x00\x00")

func assetsProjectProjectTfBytes() ([]byte, error) {
	return bindataRead(
		_assetsProjectProjectTf,
		"assets/project/project.tf",
	)
}

func assetsProjectProjectTf() (*asset, error) {
	bytes, err := assetsProjectProjectTfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/project/project.tf", size: 881, mode: os.FileMode(420), modTime: time.Unix(1488001960, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsProjectTerraformTfvarsExample = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\x28\x4a\xcc\x4b\x4f\x55\x50\xc9\x4e\xad\xd4\x51\x50\x29\x4b\x2c\x52\xb0\xb2\x55\xd0\x73\x4f\x2d\x71\xcc\xc9\x09\x4b\x2c\x2a\xae\xad\xe5\xaa\xae\x06\x89\xeb\x85\x25\x16\xf9\x25\xe6\xa6\xd6\xd6\xda\x2a\x41\x45\x5c\x52\xd3\x12\x4b\x73\x4a\xc2\x12\x73\x4a\x53\x6b\x6b\x95\xaa\xab\x15\x52\xf3\x52\x14\x6a\x6b\xb9\x00\x01\x00\x00\xff\xff\x9b\xed\x5a\xd8\x57\x00\x00\x00")

func assetsProjectTerraformTfvarsExampleBytes() ([]byte, error) {
	return bindataRead(
		_assetsProjectTerraformTfvarsExample,
		"assets/project/terraform.tfvars.example",
	)
}

func assetsProjectTerraformTfvarsExample() (*asset, error) {
	bytes, err := assetsProjectTerraformTfvarsExampleBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/project/terraform.tfvars.example", size: 87, mode: os.FileMode(420), modTime: time.Unix(1485292368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsS3Iam_roleTf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x93\xc1\x4e\xc3\x30\x0c\x86\xef\x79\x0a\x2b\xdb\x91\x85\x03\xe7\x5d\x38\x70\xe4\x05\x10\x8a\xbc\xd6\xd3\x22\xd2\xb4\x24\x2e\x11\x8a\xf2\xee\xc8\xeb\xa8\x34\xc1\x54\xb6\x03\x47\xd7\x9f\xec\xcf\x7f\x95\x55\xa4\xd4\x8f\xb1\x21\xd0\x98\x93\x75\xd8\x59\x17\x12\x63\x68\xc8\x0e\xb1\xdf\x3b\x4f\x1a\x34\x53\xe2\xcd\x5c\x16\xb5\x02\x08\xd8\x11\x6c\x41\x97\x62\x1e\xc7\xe6\x8d\xf8\x19\x3b\xaa\x75\xa6\x84\x89\xbd\xa7\x04\x5b\x78\x91\x02\x40\xaf\xcb\xf7\x0e\xe9\x98\xf4\xb0\x89\xbd\x91\x41\x55\xdf\x5d\x46\xf2\x09\x11\xe2\x55\xad\xaa\x52\x1f\x18\x1d\xee\x3c\x81\xde\x1d\x57\x5b\x01\x34\x14\x68\x69\x8f\xa3\xe7\xdf\xbc\x26\x52\x43\x55\xea\xe7\xc9\xb2\x4b\x83\x3e\x0a\xc9\x7d\x17\xcf\x33\xa5\x98\xa7\xf7\x36\xd4\xba\x99\x60\x05\x30\x20\x1f\x04\xbd\x97\x02\x53\x1a\x3b\x3a\x0e\xb4\x43\xef\x5d\xf3\x29\xad\x75\x69\x91\xd1\x30\x75\x83\x47\x26\x2b\x09\xc9\x6d\x43\x74\xa1\x71\x03\x7a\x13\x29\xb4\x14\xa9\xad\x5a\x2d\x19\xe6\x6b\x0c\xf3\xbf\x19\x4e\xb3\x6e\x4f\x71\x51\x25\xf6\xd7\x39\xdc\x90\xd3\xb2\x43\xfe\xd3\x9f\x3a\x89\x58\x64\xc6\xe6\xd0\x51\xe0\xf3\x5c\x84\x99\xd6\x5c\x7c\x10\xb3\x8e\xc5\x18\xce\xd9\xe9\xfb\x89\xc6\x18\x6e\x32\xc9\x8b\x26\xf9\x2a\x93\x3c\x9b\x7c\x05\x00\x00\xff\xff\x60\xcd\xc5\xcc\x53\x04\x00\x00")

func assetsS3Iam_roleTfBytes() ([]byte, error) {
	return bindataRead(
		_assetsS3Iam_roleTf,
		"assets/s3/iam_role.tf",
	)
}

func assetsS3Iam_roleTf() (*asset, error) {
	bytes, err := assetsS3Iam_roleTfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s3/iam_role.tf", size: 1107, mode: os.FileMode(420), modTime: time.Unix(1485292368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsS3Iam_userTf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x92\x3f\x4f\xf4\x30\x0c\xc6\xf7\x7c\x0a\x2b\x7a\xd7\x37\x1d\x98\x59\x60\xbf\x8d\xb9\x8a\xd2\x07\x5d\x75\xfd\x87\xed\x50\x55\x51\xbe\x3b\x6a\xa2\x0a\x8e\x3b\x06\x58\xed\xf8\xf7\x73\x1e\xd9\x98\x94\x88\xfa\x57\x72\xcf\x0c\xaf\x78\x11\x30\xe5\x6c\x8c\x61\xc8\x1c\x39\x80\xac\x5f\xa5\xed\xfd\xd8\x46\x01\x5b\xb2\x29\xb9\xa7\x18\x2e\xd0\x93\x1f\x91\xb3\xa5\x64\x88\x88\x26\x3f\x82\x1e\x6f\xdb\xa5\xb9\x78\x3d\xef\xcd\x46\x36\x51\x8c\x8d\x35\xd9\x98\x39\xea\x12\x95\xac\x0f\x01\x22\xed\x05\x5b\x65\xbd\xfb\x21\x16\xd4\xbf\x74\xa8\x3f\x9f\xb8\x6f\x7c\xd7\x77\x79\xa7\x1d\x30\x41\x60\xe8\x5f\x40\x75\xb2\xc0\xee\xfd\xfe\xeb\x96\x3f\x65\xb0\x27\x74\xed\xdb\x2b\x37\xa6\x3d\xaa\xea\xb9\x1f\x72\xbb\xcc\x43\x1f\xb6\xd6\xab\xfa\x70\x1e\x31\xa9\x25\xcb\x6b\xad\x1e\xae\x5f\xca\xca\xc8\xc1\xe5\xe9\x7a\xb0\xd6\x9d\x3c\xfc\xe7\xd5\x79\x9e\xea\x72\x29\x11\x06\x41\x39\x87\xa6\xa1\xd3\x5c\x95\x8c\xb7\x08\x51\x74\x54\x8f\x07\x53\x57\x9e\x7c\x04\x00\x00\xff\xff\xf3\xb9\xc5\x2d\x4b\x02\x00\x00")

func assetsS3Iam_userTfBytes() ([]byte, error) {
	return bindataRead(
		_assetsS3Iam_userTf,
		"assets/s3/iam_user.tf",
	)
}

func assetsS3Iam_userTf() (*asset, error) {
	bytes, err := assetsS3Iam_userTfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s3/iam_user.tf", size: 587, mode: os.FileMode(420), modTime: time.Unix(1485292368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsS3PolicyS3PrincipalTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8d\xbd\x0a\x83\x40\x10\x84\xfb\x7d\x8a\x65\xeb\x28\x6a\x8a\xc0\x75\x16\xe9\x43\x02\x69\xc4\xe2\x38\x56\x38\xb8\x9f\xe0\x5e\x22\x44\x7c\xf7\x70\x46\x6d\xa6\x98\x6f\x77\xbe\x19\x10\xe9\xc9\xa3\xd8\x18\x48\x21\x35\x55\xdd\x14\x75\x55\xd4\x17\x3a\x65\xf4\x48\x3a\xb1\xe7\x90\x48\x61\x07\x88\x88\xf3\x9a\x88\x74\x1d\x06\x36\xb9\xa7\xd6\xb9\x38\xad\xf7\x2b\x68\x4d\xfa\xaf\x75\x5b\x83\x48\x92\x44\xb5\x22\x6f\xcf\xf7\xe8\x98\x36\xd0\x1f\x3f\xb7\xd1\x06\x63\x5f\xda\x91\x3a\x0c\x59\xcf\xe3\xc7\x1a\xce\x12\x39\x97\xda\xeb\x6f\x0c\x7a\x92\xd2\x44\xbf\x6f\x2c\xb0\x67\x0f\x0b\xc0\x2f\x00\x00\xff\xff\x70\x95\x0f\xae\xd1\x00\x00\x00")

func assetsS3PolicyS3PrincipalTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsS3PolicyS3PrincipalTpl,
		"assets/s3/policy.s3-principal.tpl",
	)
}

func assetsS3PolicyS3PrincipalTpl() (*asset, error) {
	bytes, err := assetsS3PolicyS3PrincipalTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s3/policy.s3-principal.tpl", size: 209, mode: os.FileMode(420), modTime: time.Unix(1485292368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsS3PolicyS3RoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x8e\xcf\x4a\xc6\x30\x10\xc4\xef\x79\x8a\x65\xf1\x24\x5f\xb1\x7f\x0e\xc2\xde\x2a\x88\x17\x45\x50\xf0\x52\x44\xd2\xb0\x85\x6a\x9a\x42\x37\xa5\x48\xe9\xbb\x4b\xd2\x52\x2c\x94\xef\x92\x84\xf9\xcd\x64\x66\x56\x00\xf8\xc1\x83\xb4\xbd\x43\x02\xcc\xd3\x2c\x4f\xb2\x34\xc9\xee\xf1\x12\xd0\xbb\xd7\x9e\x3b\x76\x1e\x09\x2a\x05\x00\x30\xc7\x13\x00\x1f\x9b\x86\x4d\xd0\xb1\xb4\xb6\x9f\xa2\x3f\x82\xd2\xf8\xf5\xb7\x6a\x53\x00\x50\x0a\x7a\x62\xff\x5a\x7f\x87\xc8\xe5\xa0\x3f\xb7\xb2\x01\x39\x21\x0f\xa3\xf9\xe1\xb3\x48\x69\xed\xcb\xef\x4a\x05\x37\xfa\xb9\x6f\x78\x63\xe9\xc7\xc1\xf0\x71\x85\x1e\x1c\xe9\x49\x48\x0a\x22\xba\x99\xeb\x98\xfe\x72\xba\xe3\xe5\x7f\xc3\x15\xdb\xdd\xed\xde\x15\xef\x45\x85\xd7\xa2\xfe\x02\x00\x00\xff\xff\xe7\xb9\xca\xef\x48\x01\x00\x00")

func assetsS3PolicyS3RoTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsS3PolicyS3RoTpl,
		"assets/s3/policy.s3-ro.tpl",
	)
}

func assetsS3PolicyS3RoTpl() (*asset, error) {
	bytes, err := assetsS3PolicyS3RoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s3/policy.s3-ro.tpl", size: 328, mode: os.FileMode(420), modTime: time.Unix(1485292368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsS3PolicyS3RwTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\x0a\x4b\x2d\x2a\xce\xcc\xcf\x53\xb2\x52\x50\x32\x32\x30\x34\xd2\x35\x34\xd0\x35\x34\x57\xd2\x01\x49\x05\x97\x24\x96\xa4\xe6\xa6\xe6\x95\x28\x59\x29\x44\x73\x29\x28\x28\x28\x54\x83\x49\x05\x05\x25\xd7\xb4\xb4\xd4\x64\x90\xb8\x92\x63\x4e\x4e\x7e\x39\x58\x3d\x58\xc2\x31\xb9\x04\x62\x5a\x34\x54\x04\x01\x94\x8a\x8d\xad\x5c\x52\x73\x52\x4b\x52\xfd\x93\xb2\x40\xba\x75\xb0\x2a\x71\x4f\x2d\xc1\x2b\xef\x93\x59\x0c\x55\x50\x8c\x47\x85\x53\x69\x72\x76\x2a\x2e\x23\x02\x4a\x61\x56\x40\xa5\x63\xe1\xee\x0f\x4a\x2d\xce\x2f\x2d\x4a\x4e\x45\xf1\x81\x52\x62\x51\x9e\x55\x62\x79\xb1\x55\xb1\xb1\x95\x95\x95\x4a\x75\x12\xd8\xf0\xf8\xbc\xc4\xdc\xd4\x5a\x24\x2b\xf0\x29\xd3\xd7\x82\xdb\x05\xa6\x6b\xb9\x40\xac\x5a\x2e\x40\x00\x00\x00\xff\xff\x6b\xe2\x57\x5c\x84\x01\x00\x00")

func assetsS3PolicyS3RwTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsS3PolicyS3RwTpl,
		"assets/s3/policy.s3-rw.tpl",
	)
}

func assetsS3PolicyS3RwTpl() (*asset, error) {
	bytes, err := assetsS3PolicyS3RwTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s3/policy.s3-rw.tpl", size: 388, mode: os.FileMode(420), modTime: time.Unix(1485292368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsS3S3Tf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x53\x5f\x6b\xdb\x30\x10\x7f\xf7\xa7\x38\xc4\x60\x10\x86\x13\x28\x0c\xf6\x90\x87\xac\xd9\x46\x61\x34\xa5\x4d\xf7\x32\x86\xb9\x5a\xe7\x44\x44\x91\xbc\x93\x94\xa6\x18\x7d\xf7\x21\xcb\xc9\x9a\xae\x6c\x1d\xd5\x83\x91\xef\xf7\x4f\xff\xae\x60\x72\x36\x70\x4d\x20\xf0\xde\x55\xee\xac\xba\x0b\xf5\x86\xbc\x00\x21\xa9\xc1\xa0\xbd\x80\xae\x00\x00\xc8\x75\x98\x82\xe8\xba\xf2\x63\xff\x73\x89\x5b\x8a\xb1\xec\xba\xf2\xf3\x4f\x69\x62\x14\x3d\x11\x6b\x9d\x58\x2d\xab\x1d\x7a\x12\x45\x31\x1e\x8d\x7a\xa0\xb6\xec\x2a\x0e\x9a\x06\x47\x00\xd4\xda\xde\x93\xac\xd6\x84\x92\xd8\xc1\x14\xbe\x8b\x91\xf8\xf1\x04\xdd\x92\x5f\x5b\x99\xd1\xab\xdb\xa5\x78\x27\xae\x16\x37\xcb\x3f\x68\x96\xd5\x4a\x99\x9e\xd6\x75\xe5\xb9\x65\x57\xce\x32\xb4\xc8\x48\x8c\x07\xc9\x16\xf7\x15\xae\xa8\x72\x54\x5b\xd3\x3b\x9f\x4d\x26\x93\x1e\x8c\xfd\x77\x34\x1a\x17\xfd\xa4\xeb\x00\x54\x03\xc6\x7a\x28\x6f\xcd\x37\x62\xa7\xac\x21\x09\x31\x0e\x56\xbb\x5c\x52\x66\x75\xdc\x15\x00\x19\xbc\xd3\x24\x61\x0a\x9e\x03\x0d\xe5\x83\xe2\x70\x1c\x29\x06\xe6\xd6\xf8\xb7\xb0\x21\x6a\x01\xd9\x06\x23\xd3\x76\xc0\x6a\x79\x30\x76\xd0\x58\xa6\x1d\xf1\x6f\xcd\x72\x31\x5f\xc0\x16\x37\x04\x7e\xad\x1c\xd4\xd6\x34\x6a\x15\x38\x45\x1e\x49\xe3\x61\xa6\x55\x43\xf5\x43\xad\xe9\xf4\xe0\xd3\x68\x99\x1a\xb5\x4f\x57\x95\x1d\xc6\xe2\x11\xf8\xec\x0e\xd2\x30\xd6\xd4\x81\x99\x8c\xaf\x86\x15\x56\x9e\xd1\x38\xe5\x95\x35\x27\xfe\x69\x48\x7c\xc8\xa7\xfb\xa4\xee\xbc\xe5\x74\x01\xb5\x46\x97\x08\xe2\x66\x39\xbb\x9c\xcf\xae\xe7\xd5\xc5\xec\xf1\x32\xe2\x6b\x93\xdf\xff\x33\xf9\xcb\xd7\xd9\xf9\xc5\xa7\xeb\xff\x48\xa5\x7d\xab\x18\xff\x96\xfa\x61\xf2\x8c\x5b\x3c\xbe\x28\x32\xfd\x03\x8a\x45\x51\xd8\xe0\xdb\xe0\x41\xe4\xee\xaa\x98\x56\xca\x9a\xdc\x72\x3b\xd4\x81\xd2\x0a\xdf\x74\x27\xad\x59\x0e\x8d\x59\x66\x72\x14\x45\x3c\xda\x20\xbf\x54\x8c\x7c\xaa\x34\xb8\xa5\x17\x4a\x95\xec\x95\xbf\x02\x00\x00\xff\xff\x0e\xd3\x37\xb6\x3b\x04\x00\x00")

func assetsS3S3TfBytes() ([]byte, error) {
	return bindataRead(
		_assetsS3S3Tf,
		"assets/s3/s3.tf",
	)
}

func assetsS3S3Tf() (*asset, error) {
	bytes, err := assetsS3S3TfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s3/s3.tf", size: 1083, mode: os.FileMode(420), modTime: time.Unix(1485292368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsS3Template_fileTf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\xce\xb1\x0e\x82\x40\x0c\x06\xe0\xfd\x9e\xa2\x69\x18\x74\xf0\x1c\x9c\x7d\x16\x52\xa1\xc6\x8b\x05\x9a\xa3\x40\xcc\xe5\xde\xdd\x78\x89\xc6\x85\x05\xd6\xfe\xfd\xff\x7c\x2d\x19\x01\x1a\x77\x2a\x64\x5c\xdf\x83\x30\x02\x8e\x97\x53\x1c\x10\x92\x03\xf8\x46\x70\x05\xac\xd2\x27\x3f\x60\x95\x94\xec\xe1\xbb\xa1\x9d\x84\xf3\x59\x07\x09\xcd\xcb\x97\x92\x37\x15\x3c\x66\x74\x00\x33\xc5\xb1\x4c\x00\xdc\xa6\xe6\xc9\x56\xf7\xd4\x71\x99\x99\x29\xfa\xbf\x5b\x79\xcf\x2e\x3b\xe7\xd6\x3d\xcb\x16\xcf\xb2\xd3\xb3\xca\xd1\x18\xfa\x26\x28\xc9\x06\xd5\xaf\xbb\x0f\xf7\x0e\x00\x00\xff\xff\x09\xe5\x90\xb9\xbb\x01\x00\x00")

func assetsS3Template_fileTfBytes() ([]byte, error) {
	return bindataRead(
		_assetsS3Template_fileTf,
		"assets/s3/template_file.tf",
	)
}

func assetsS3Template_fileTf() (*asset, error) {
	bytes, err := assetsS3Template_fileTfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s3/template_file.tf", size: 443, mode: os.FileMode(420), modTime: time.Unix(1485292368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCommonFormterraManifest = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd7\x57\x08\x28\xca\x4f\x29\x4d\x4e\x4d\x51\x48\xaa\x54\x48\xcb\x2f\xca\x2d\x49\x2d\x2a\x4a\x54\xa8\xae\x0e\x4b\x2d\x2a\xce\xcc\xcf\xab\xad\x55\xe0\xd2\xd7\x57\x70\x2c\x4a\x2f\xcd\x4d\xcd\x2b\x29\xb6\x52\xa8\xae\x76\xf6\xf1\x74\x2c\x4a\x2f\xae\xad\xe5\x02\x04\x00\x00\xff\xff\x6e\x15\xb3\x6e\x40\x00\x00\x00")

func assetsCommonFormterraManifestBytes() ([]byte, error) {
	return bindataRead(
		_assetsCommonFormterraManifest,
		"assets/common/.formterra.manifest",
	)
}

func assetsCommonFormterraManifest() (*asset, error) {
	bytes, err := assetsCommonFormterraManifestBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/common/.formterra.manifest", size: 64, mode: os.FileMode(420), modTime: time.Unix(1485292368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCommonMakefile = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x4f\x8f\xd3\x30\x10\xc5\xcf\xcc\xa7\x78\xda\x46\x6a\xb2\x22\xe9\x3d\x52\x90\x38\x74\xa1\x02\x76\x11\xec\x85\x13\x72\x92\x71\x63\xe1\x38\x61\xec\x14\x45\xe2\xc3\xa3\xa4\x7f\x48\xa1\xeb\x83\x0f\xcf\x3f\xbf\xf7\x66\x68\x85\x9d\x46\x68\x58\x18\xc6\x43\x39\xb0\x3b\x48\x45\x2b\x78\xd3\x0e\x56\x05\x46\x6d\x84\xdd\x01\xe5\x88\x30\x88\x33\x6e\x8f\x83\x12\xa3\x4a\xcb\x50\xde\x9b\xbd\x6b\xd9\x05\x4f\x2b\x18\x17\x3a\xb4\xea\xc7\x95\x9e\x01\xcf\x8d\xf1\x93\x79\x2f\x5d\xa9\x4a\x3b\xc2\xb8\x4a\xb8\x36\xa5\x1d\xc9\x68\xc7\x3f\x11\x47\xf1\x2f\x63\xeb\x4a\x49\x8d\x6c\x2e\x90\xbc\x4e\x28\x8a\x8d\xd3\x1d\xee\x17\x07\xd3\x5f\x3b\xd4\x53\x8b\x23\x08\xe3\x8e\x99\x4b\x2c\xa1\xdd\xbb\xc7\xa7\x2f\x5b\xe4\x05\xa2\xd8\x37\x6c\x2d\x4a\xe5\x1b\xa4\x15\xee\xf6\xc2\x3d\xd6\xc5\xfa\x6c\xf0\x1b\x9e\x6b\xac\xfd\xa6\xd8\xe4\xc5\x66\x8d\x37\xb3\x1f\xbb\xc3\x5d\x42\xc7\x34\x3e\x2b\xc4\xae\x36\x9a\x48\xf5\xbd\x1d\x73\x04\x16\x51\xba\x93\x36\x0b\xba\xb7\xca\xd1\xab\x8b\x82\x19\xb9\x41\x48\xfb\xbf\x48\xd3\x9d\x23\x8a\x9f\x1f\xbe\x3f\xec\x3e\x6e\xbf\x26\xc8\x2e\xd0\xd2\x74\xe2\x90\x76\x43\xb8\xe1\x41\x44\xd9\xe7\xf7\x4f\x8f\xdf\xf2\x23\x26\xac\x85\x7d\x73\x2a\x52\x59\x56\x8e\xce\xfe\xc5\x62\xdf\xf7\x59\xd0\x09\xd1\xdf\xc0\xab\x22\xcb\xf4\x3d\x07\xa4\xe9\xd0\xd7\x2a\x30\x11\x9d\x02\xf2\x25\x72\xd2\x88\xfe\xed\xf7\xf2\x74\x51\xfc\xe9\xed\x87\x6d\x82\xd3\x14\x73\xd1\x2b\xcf\x9a\x7d\x90\x6e\x44\xaa\x3b\xa9\x78\xde\x60\x2a\xfa\xc6\x6a\x57\xb8\xf1\xe4\xc3\xd4\xf6\x4f\x00\x00\x00\xff\xff\x02\x4a\xfb\x4e\xe7\x02\x00\x00")

func assetsCommonMakefileBytes() ([]byte, error) {
	return bindataRead(
		_assetsCommonMakefile,
		"assets/common/Makefile",
	)
}

func assetsCommonMakefile() (*asset, error) {
	bytes, err := assetsCommonMakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/common/Makefile", size: 743, mode: os.FileMode(420), modTime: time.Unix(1485292368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRdsRdsTf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x93\xb1\x8e\xdb\x30\x0c\x86\x77\x3f\x05\xe1\x76\xad\xaf\xbd\xa2\xdd\x6e\xbb\xb9\xb7\x74\x2b\x0a\x81\x96\xe8\x58\xa8\x2c\xb9\x22\x95\x20\x0d\xfc\xee\x85\x6d\x09\xb1\x9d\xd3\x10\x20\xe4\xc7\x9f\xa4\xfc\xab\x3a\x63\xb4\xd8\x3a\x82\x3a\x31\x45\x8f\x03\xd5\x70\xab\x00\x0c\x75\x98\x9c\xc0\x0b\xd4\x31\x04\xa9\xab\x69\x83\x0e\xc9\x89\x55\xf8\xef\x88\x4a\x4c\x54\x4d\xd5\x86\x34\xad\xe2\xd4\x7a\x12\x75\x8a\x21\x8d\x2a\x37\x98\x0e\x08\xe9\x14\xad\x5c\x57\x68\xc9\x6f\x45\x46\x64\xbe\x84\x68\x0e\x85\xac\x7b\x1a\x70\x95\xdc\x25\xc8\x9f\xac\x7f\xdc\x63\xb8\xf2\x5f\xb7\x5f\x64\x25\xd5\x99\x22\xdb\xe0\x1f\x2a\xbe\x35\xdf\x9b\xe7\xaf\xfb\x12\xeb\x59\xd0\x6b\x52\xda\x21\xf3\x43\x89\x69\x1b\x79\x6e\x06\xab\x63\x98\xeb\xaa\xea\x03\xbc\xa2\x60\x8b\x4c\x50\x4a\xab\x48\x1c\x52\xd4\x04\x35\x5e\x58\x99\x56\x95\x4c\x0d\x75\xd6\x5a\x85\x01\xd0\xb9\xa0\x51\xc8\x28\x96\x10\xf1\x44\xf0\x02\x5f\x3e\x2f\xa9\x75\xf8\xb9\xe9\xc7\xdb\x19\x63\xb3\xfe\x9f\xea\x4d\xb2\x6c\x76\x84\x4a\x3c\xc3\xfb\x9d\xee\xf0\x3e\x9e\xe1\xa7\xa7\x9f\x6f\xaf\x6f\xd0\xd9\x53\x8a\x04\x21\x09\x5c\x7a\x14\x90\x9e\xa0\x27\xfd\x07\xa4\xb7\x0c\x03\xa1\xe7\x05\xef\xac\x47\xa7\xd8\xe3\xc8\x7d\x10\x65\x0d\x79\xb1\x9d\xa5\x38\xb7\xb9\xdd\x9a\x72\x3b\x3f\x70\xa0\x69\xfa\xb4\xe0\x6b\xa3\x31\xb5\xce\x6a\x77\x55\xa8\x35\x31\xdb\xf9\xfa\x5f\xa0\x43\xc7\xb4\xe4\xdf\xf3\xd6\x7d\xf6\xf7\xb2\x79\x83\xf3\xa8\x0f\x96\x53\xd6\xcc\x6b\xff\x5a\xd2\xf3\xd9\x88\xec\xc0\xac\xf0\x7b\xf9\x2d\xcf\xe0\xde\xb4\x44\xa6\xba\x5a\x88\xcd\xc7\x37\x24\x68\xdd\x7a\x27\x65\xd2\x87\xf5\x57\xf5\xf2\x12\xef\xba\x25\x92\x81\xf2\x20\xee\x40\x89\x94\xc6\xce\x76\xa4\xaf\xda\x51\xb6\xd1\x7c\x74\x24\x14\x52\x2d\x75\x21\x92\x32\xc4\x12\xc3\xb5\xbc\xda\x19\x98\x66\xc3\x86\x24\x63\x12\xa8\x4d\x1e\x4c\xa1\x31\x91\x8a\xd3\xcf\xe8\x52\x9e\xeb\x60\xdd\x26\x1b\xb7\xc9\xfc\x34\xdb\xff\x7f\x00\x00\x00\xff\xff\x34\x60\x37\x30\x5f\x04\x00\x00")

func assetsRdsRdsTfBytes() ([]byte, error) {
	return bindataRead(
		_assetsRdsRdsTf,
		"assets/rds/rds.tf",
	)
}

func assetsRdsRdsTf() (*asset, error) {
	bytes, err := assetsRdsRdsTfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rds/rds.tf", size: 1119, mode: os.FileMode(420), modTime: time.Unix(1485292368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRdsTerraformTfvarsExample = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x48\x2c\x2e\x2e\xcf\x2f\x4a\xb1\x55\x52\xe2\x2a\x4e\xce\x48\xcd\x4d\x8c\xcf\x4b\xcc\x4d\x05\x71\x01\x01\x00\x00\xff\xff\x98\x09\x29\x00\x1b\x00\x00\x00")

func assetsRdsTerraformTfvarsExampleBytes() ([]byte, error) {
	return bindataRead(
		_assetsRdsTerraformTfvarsExample,
		"assets/rds/terraform.tfvars.example",
	)
}

func assetsRdsTerraformTfvarsExample() (*asset, error) {
	bytes, err := assetsRdsTerraformTfvarsExampleBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rds/terraform.tfvars.example", size: 27, mode: os.FileMode(420), modTime: time.Unix(1485292368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsAclsAclsTf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x52\xc1\xaa\xdb\x30\x10\xbc\xeb\x2b\x16\xf1\xce\x4e\xce\x05\x5f\xda\x43\xe9\xe5\x51\xda\x0f\x10\x1b\x69\x1d\xc4\x53\xa4\xb0\x92\x93\x06\xa1\x7f\x2f\x92\x1c\xdb\xef\x41\x12\x30\x78\x76\x66\x76\x3c\xd2\x0d\xd9\xe2\xc9\x11\xc8\xdb\x55\x2b\x6b\x24\xe4\x22\x36\x30\xce\x27\x4f\x49\x59\x13\x25\x64\x01\x00\x90\x1e\x57\x1a\xa5\xb3\x31\x49\x51\xc4\xe1\xf0\xfd\x01\x86\x26\x9c\x5d\x02\x74\x2e\xdc\xc1\x07\x48\x8c\xd3\x64\xb5\x60\x8a\x61\x66\x4d\x20\xf1\x1e\x95\xa7\x74\x0f\xfc\xa1\x50\x3b\x09\xf2\x82\xd6\x3f\x3d\xfb\x6a\x18\x41\xbe\xe5\x1b\xf2\xd0\xdf\x8b\x6c\x43\xeb\xcf\x4c\x31\x2e\xd4\xfa\xbb\x72\x48\x41\x07\x57\x05\xe8\x9c\x5c\x07\x3c\x3b\x52\x3e\xc0\x08\x39\x0f\x7f\x13\x72\xb2\xfe\xfc\xcb\x1b\xfa\x57\x0a\xc0\x4a\x43\x9d\x6c\xf0\x55\x6d\xc8\x3f\x36\xf9\xc4\xe1\xa2\xae\x81\xd3\x78\x5c\xb1\x14\xbe\x22\xda\x1a\x56\x27\x17\xf4\x07\x8c\xf2\x38\xb4\xff\xe1\xd8\x5d\x4a\xaf\x08\xcf\xfb\xb8\xef\x78\xa1\xba\xac\x7d\xf1\x42\x2b\x42\x88\x9c\x81\xd1\x9f\x09\xde\x6a\x6e\xf8\x36\xc2\xf0\x93\xd2\x9f\xd9\x51\x1c\xda\xb3\x94\xd7\x0d\xaa\xaa\x91\x20\xad\x57\x39\x37\x83\xa6\x79\x9f\x2f\x27\xe2\x52\x9e\xcd\xee\x15\xcf\x86\xbf\x38\x0d\x35\xd7\xb0\xd6\x4d\xbd\xed\x11\xe4\x84\x2e\x52\x07\xd7\x66\x2a\xfe\xdc\xf7\x3b\x70\x2a\x8b\x6a\xa9\xe9\xd5\xb8\x1f\x4c\xcb\xb6\xa7\x7c\x4a\xbc\x11\xb7\xf3\x69\x37\xaa\x4f\xf6\xb5\x6f\x0e\x3f\xac\x59\xb5\xfb\x6b\xb1\x86\x58\xb0\xca\x29\x22\x67\xf2\xa6\x94\xff\x01\x00\x00\xff\xff\x6c\x70\xe9\x76\xf4\x02\x00\x00")

func assetsAclsAclsTfBytes() ([]byte, error) {
	return bindataRead(
		_assetsAclsAclsTf,
		"assets/acls/acls.tf",
	)
}

func assetsAclsAclsTf() (*asset, error) {
	bytes, err := assetsAclsAclsTfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/acls/acls.tf", size: 756, mode: os.FileMode(420), modTime: time.Unix(1486515469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/module_client.tf": assetsModule_clientTf,
	"assets/project/project.tf": assetsProjectProjectTf,
	"assets/project/terraform.tfvars.example": assetsProjectTerraformTfvarsExample,
	"assets/s3/iam_role.tf": assetsS3Iam_roleTf,
	"assets/s3/iam_user.tf": assetsS3Iam_userTf,
	"assets/s3/policy.s3-principal.tpl": assetsS3PolicyS3PrincipalTpl,
	"assets/s3/policy.s3-ro.tpl": assetsS3PolicyS3RoTpl,
	"assets/s3/policy.s3-rw.tpl": assetsS3PolicyS3RwTpl,
	"assets/s3/s3.tf": assetsS3S3Tf,
	"assets/s3/template_file.tf": assetsS3Template_fileTf,
	"assets/common/.formterra.manifest": assetsCommonFormterraManifest,
	"assets/common/Makefile": assetsCommonMakefile,
	"assets/rds/rds.tf": assetsRdsRdsTf,
	"assets/rds/terraform.tfvars.example": assetsRdsTerraformTfvarsExample,
	"assets/acls/acls.tf": assetsAclsAclsTf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"acls": &bintree{nil, map[string]*bintree{
			"acls.tf": &bintree{assetsAclsAclsTf, map[string]*bintree{}},
		}},
		"common": &bintree{nil, map[string]*bintree{
			".formterra.manifest": &bintree{assetsCommonFormterraManifest, map[string]*bintree{}},
			"Makefile": &bintree{assetsCommonMakefile, map[string]*bintree{}},
		}},
		"module_client.tf": &bintree{assetsModule_clientTf, map[string]*bintree{}},
		"project": &bintree{nil, map[string]*bintree{
			"project.tf": &bintree{assetsProjectProjectTf, map[string]*bintree{}},
			"terraform.tfvars.example": &bintree{assetsProjectTerraformTfvarsExample, map[string]*bintree{}},
		}},
		"rds": &bintree{nil, map[string]*bintree{
			"rds.tf": &bintree{assetsRdsRdsTf, map[string]*bintree{}},
			"terraform.tfvars.example": &bintree{assetsRdsTerraformTfvarsExample, map[string]*bintree{}},
		}},
		"s3": &bintree{nil, map[string]*bintree{
			"iam_role.tf": &bintree{assetsS3Iam_roleTf, map[string]*bintree{}},
			"iam_user.tf": &bintree{assetsS3Iam_userTf, map[string]*bintree{}},
			"policy.s3-principal.tpl": &bintree{assetsS3PolicyS3PrincipalTpl, map[string]*bintree{}},
			"policy.s3-ro.tpl": &bintree{assetsS3PolicyS3RoTpl, map[string]*bintree{}},
			"policy.s3-rw.tpl": &bintree{assetsS3PolicyS3RwTpl, map[string]*bintree{}},
			"s3.tf": &bintree{assetsS3S3Tf, map[string]*bintree{}},
			"template_file.tf": &bintree{assetsS3Template_fileTf, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

